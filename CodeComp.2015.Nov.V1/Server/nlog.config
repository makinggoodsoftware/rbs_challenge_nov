<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- 
    To enable internal logging when configuring NLog please 
    check http://nlog-project.org/wiki/Internal_logging 
  -->
  <!-- Shared Formats: For more information please check https://github.com/nlog/nlog/wiki/Layouts -->
  <variable name="layoutBrief" value="${longdate} | ${level} | ${logger} | ${message} | ${exception:format=tostring" />
  <variable name="layoutVerbose" value="${longdate} | ${machinename} | ${processid} | ${processname} | ${level} | ${logger} | ${message} | ${exception:format=tostring}" />
  <variable name="layoutVerboseEventLog" value="${longdate} - ${level} - ${message} ${newline}${processid} - ${processname} - ${callsite}${newline}${exception:format=tostring}" />
  <!-- Targets -->
  <targets>
    <!-- By default ensure they're async to aviod blocking -->
    <default-wrapper xsi:type="AsyncWrapper" />

    <!-- 
        These logs will appear in the log folder within the base directory. This is only a sample log
        config, please check https://github.com/nlog/nlog/wiki/Targets for more log targets
    -->
    <target xsi:type="File" name="fileLog" layout="${layoutVerbose}" fileName="${basedir}\Logs\RBS.CodeComp.Server.log" archiveFileName="${basedir}\Logs\RBS.CodeComp.Server.#.log" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="15" />

    <!-- Keep instrumentation seperate, use different format -->
    <target xsi:type="File" name="instrumentationLog" layout="${layoutBrief}" fileName="${basedir}\Logs\RBS.CodeComp.Server-Instrumentation.log" archiveFileName="${basedir}\Logs\RBS.CodeComp.Server-Instrumentation.#.log" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="5" />
  </targets>
  <!-- Rules: For more information please check https://github.com/nlog/nlog/wiki/Conditions -->
  <rules>
    <logger name="*" minlevel="Trace" writeTo="fileLog">
      <!-- don't log any instrumentation to default log -->
      <filters>
        <when condition="contains('${logger}', '.InstrumentationProvider') and level==LogLevel.Info" action="Ignore" />
      </filters>
    </logger>
    <!-- 
        The instrumentation provider name by default is RBS.Services.Instrumentation.Implementation.InstrumentationProvider.
        If you wish to implement this yourself, you'll need to ensure that your namespace matches so the metrics are
        logged correctly.
    -->
    <logger name="*.InstrumentationProvider" levels="Info" writeTo="instrumentationLog" />
  </rules>
</nlog>